name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-backend:
    name: Build & Test .NET Backend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Restore & Build Backend
        run: |
          dotnet restore FlagExplorerAPI.sln
          dotnet build FlagExplorerAPI.sln --no-restore --configuration Release

      - name: Run Backend Tests
        run: dotnet test FlagExplorerAPI.sln --no-build --configuration Release

  build-frontend:
    name: Build React Frontend
    runs-on: ubuntu-latest
    needs: build-backend
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Build production bundle
        run: npm run build

      # Optional: enable if front-end tests are added later
      # - name: Run Frontend Tests
      #   run: npm test -- --watchAll=false

  package:
    name: Package Artifacts
    runs-on: ubuntu-latest
    needs: [build-backend, build-frontend]
    steps:
      - uses: actions/checkout@v3

      - name: Debug .NET output
        run: ls -R FlagExplorerAPI/bin/Release/net8.0 || echo "No files found in backend build"

      - name: Debug React output
        run: ls -R build || echo "No files found in frontend build"

      - name: Upload .NET API build
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: backend-build
          path: FlagExplorerAPI/bin/Release/net8.0

      - name: Upload React build
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: frontend-build
          path: build

      # Step 4: fallback - zip builds into deploy folder if upload fails
      - name: Package for fallback deployment
        run: |
          mkdir -p deploy
          cp -r FlagExplorerAPI/bin/Release/net8.0 deploy/backend || echo "No backend to copy"
          cp -r build deploy/frontend || echo "No frontend to copy"
          zip -r deploy.zip deploy || echo "Failed to zip fallback package"

      - name: Upload fallback zip
        uses: actions/upload-artifact@v3
        with:
          name: deploy-zip
          path: deploy.zip
